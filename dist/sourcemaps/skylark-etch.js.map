{"version":3,"sources":["skylark-etch.js"],"names":["define","skylark","langx","etch","VERSION","extend","models","views","collections","attach","config","selector","buttonClasses","default","all","title","Model","Editor","_","View","initialize","this","$el","$","el","bindAll","model","bind","changeButtons","changePosition","changeEditable","events","click .etch-bold","click .etch-superscript","click .etch-subscript","click .etch-italic","click .etch-underline","click .etch-heading","click .etch-unordered-list","click .etch-justify-left","click .etch-justify-center","click .etch-justify-right","click .etch-ordered-list","click .etch-link","click .etch-image","click .etch-save","click .etch-clear-formatting","setButtonClass","editorModel","buttonClass","get","attr","set","buttons","empty","view","length","each","button","$buttonEl","replace","append","show","hide","pos","animate","top","y","left","x","queue","wrapSelection","selectionOrRange","elString","cb","range","Range","getRangeAt","document","createElement","surroundContents","clearFormatting","e","preventDefault","execCommand","toggleBold","toggleSubscript","toggleSuperscript","toggleItalic","toggleUnderline","toggleHeading","window","getSelection","wrapper","commonAncestorContainer","parentElement","is","replaceWith","textContent","h3","urlPrompt","callback","url","prompt","test","toggleLink","startContainer","parentNode","tagName","endContainer","toggleUnorderedList","toggleOrderedList","justifyLeft","justifyCenter","justifyRight","getImage","startUploader","insertImage","ImageUploader","_imageCallback","image","startCropper","_savedRange","render","sel","removeAllRanges","addRange","attrs","editable","editableModel","EditableImage","insertNode","addClass","save","trigger","editableInit","stopPropagation","target","srcElement","$editable","etchFindEditable","$editor","data","editorAttrs","body","appendChild","etchInstantiate","classType","err","message","$imgs","find","$this","editableImageModel","unbind","not","remove","position","pageX","pageY","fn","options","settings","isFunction","closest","main"],"mappings":"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","file":"../skylark-etch.js","sourcesContent":["define('skylark-etch/etch',[\n\t\"skylark-langx/skylark\",\n\t\"skylark-langx/langx\"\n],function(skylark,langx) {\n\t'use strict';\n\n\tvar models = {},\n\t\tviews = {},\n\t\tcollections = {},\n\t\tetch = {};\n\n\t// versioning as per semver.org\n\tetch.VERSION = '0.6.3';\n\n\n\t// tack on models, views, etc... as well as init function\n\tlangx.extend(etch, {\n\t\tmodels: models,\n\t\tviews: views,\n\t\tcollections: collections,\n\t});\n\n\n\treturn langx.attach(skylark,\"itg.etch\",etch);\n});\n\ndefine('skylark-etch/config',[\r\n  \"./etch\"\r\n],function(etch){\r\n  return etch.config = {\r\n    // selector to specify editable elements   \r\n    selector: '.editable',\r\n      \r\n    // Named sets of buttons to be specified on the editable element\r\n    // in the markup as \"data-button-class\"   \r\n    buttonClasses: {\r\n      'default': ['save'],\r\n      'all': [\r\n        'bold', \r\n        'superscript',\r\n        'subscript', \r\n        'italic', \r\n        'underline', \r\n        \"heading\",\r\n        \"justify-left\",\r\n        \"justify-center\",\r\n        \"justify-right\",\r\n        'unordered-list', \r\n        'ordered-list', \r\n        'link', \r\n        'clear-formatting', \r\n        'save'\r\n      ],\r\n      'title': [\r\n        'bold', \r\n        'superscript',\r\n        'subscript', \r\n        'italic', \r\n        'underline', \r\n        'save'\r\n      ]\r\n    }\r\n  };\r\n\r\n })\r\n;\ndefine('skylark-etch/models/Editor',[\r\n\t\"skylark-backbone/Model\",\r\n\t\"../etch\"\r\n],function(Model,etch){\r\n  \treturn etch.models.Editor = Model;\r\n});\r\n\ndefine('skylark-etch/views/Editor',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-underscore/underscore\",\r\n  \"skylark-backbone/View\",\r\n  \"../etch\"\r\n],function(langx,_,View,etch) {\r\n  \r\n  return etch.views.Editor = View.extend({\r\n    initialize: function() {\r\n      this.$el = $(this.el);\r\n            \r\n      // Model attribute event listeners:\r\n      _.bindAll(this, 'changeButtons', 'changePosition', 'changeEditable', 'insertImage');\r\n      this.model.bind('change:buttons', this.changeButtons);\r\n      this.model.bind('change:position', this.changePosition);\r\n      this.model.bind('change:editable', this.changeEditable);\r\n\r\n      // Init Routines:\r\n      this.changeEditable();\r\n    },\r\n\r\n    events: {\r\n      'click .etch-bold': 'toggleBold',\r\n      'click .etch-superscript': 'toggleSuperscript',\r\n      'click .etch-subscript': 'toggleSubscript',\r\n      'click .etch-italic': 'toggleItalic',\r\n      'click .etch-underline': 'toggleUnderline',\r\n      'click .etch-heading': 'toggleHeading',\r\n      'click .etch-unordered-list': 'toggleUnorderedList',\r\n      'click .etch-justify-left': 'justifyLeft',\r\n      'click .etch-justify-center': 'justifyCenter',\r\n      'click .etch-justify-right': 'justifyRight',\r\n      'click .etch-ordered-list': 'toggleOrderedList',\r\n      'click .etch-link': 'toggleLink',\r\n      'click .etch-image': 'getImage',\r\n      'click .etch-save': 'save',\r\n      'click .etch-clear-formatting': 'clearFormatting'\r\n    },\r\n        \r\n    changeEditable: function() {\r\n      this.setButtonClass();\r\n      // Im assuming that Ill add more functionality here\r\n    },\r\n\r\n    setButtonClass: function() {\r\n      // check the button class of the element being edited and set the associated buttons on the model\r\n      var editorModel = this.model;\r\n      var buttonClass = editorModel.get('editable').attr('data-button-class') || 'default';\r\n      editorModel.set({ buttons: etch.config.buttonClasses[buttonClass] });\r\n    },\r\n\r\n    changeButtons: function() {\r\n      // render the buttons into the editor-panel\r\n      this.$el.empty();\r\n      var view = this;\r\n      var buttons = this.model.get('buttons');\r\n            \r\n      // hide editor panel if there are no buttons in it and exit early\r\n      if (!buttons.length) { $(this.el).hide(); return; }\r\n            \r\n      _.each(this.model.get('buttons'), function(button){\r\n        var $buttonEl = $('<a href=\"#\" class=\"etch-editor-button etch-'+ button +'\" title=\"'+ button.replace('-', ' ') +'\"><span></span></a>');\r\n        view.$el.append($buttonEl);\r\n      });\r\n            \r\n      $(this.el).show('fast');\r\n    },\r\n\r\n    changePosition: function() {\r\n      // animate editor-panel to new position\r\n      var pos = this.model.get('position');\r\n      this.$el.animate({'top': pos.y, 'left': pos.x}, { queue: false });\r\n    },\r\n        \r\n    wrapSelection: function(selectionOrRange, elString, cb) {\r\n      // wrap current selection with elString tag\r\n      var range = selectionOrRange === Range ? selectionOrRange : selectionOrRange.getRangeAt(0);\r\n      var el = document.createElement(elString);\r\n      range.surroundContents(el);\r\n    },\r\n        \r\n    clearFormatting: function(e) {\r\n      e.preventDefault();\r\n      document.execCommand('removeFormat', false, null);\r\n    },\r\n        \r\n    toggleBold: function(e) {\r\n      e.preventDefault();\r\n      document.execCommand('bold', false, null);\r\n    },\r\n\r\n    toggleSubscript: function(e) {\r\n      e.preventDefault();\r\n      document.execCommand('subscript', false, null);\r\n    },\r\n\r\n    toggleSuperscript: function(e) {\r\n      e.preventDefault();\r\n      document.execCommand('superscript', false, null);\r\n    },\r\n\r\n    toggleItalic: function(e) {\r\n      e.preventDefault();\r\n      document.execCommand('italic', false, null);\r\n    },\r\n\r\n    toggleUnderline: function(e) {\r\n      e.preventDefault();\r\n      document.execCommand('underline', false, null);\r\n    },\r\n        \r\n    toggleHeading: function(e) {\r\n      e.preventDefault();\r\n      var range = window.getSelection().getRangeAt(0);\r\n      var wrapper = range.commonAncestorContainer.parentElement\r\n      if ($(wrapper).is('h3')) {\r\n        $(wrapper).replaceWith(wrapper.textContent)\r\n        return;\r\n      }\r\n      var h3 = document.createElement('h3');\r\n      range.surroundContents(h3);\r\n    },\r\n\r\n    urlPrompt: function(callback) {\r\n      // This uses the default browser UI prompt to get a url.\r\n      // Override this function if you want to implement a custom UI.\r\n        \r\n      var url = prompt('Enter a url', 'http://');\r\n      \r\n      if (null === url) {\r\n          return;\r\n      }\r\n        \r\n      // Ensure a new link URL starts with http:// or https:// \r\n      // before it's added to the DOM.\r\n      //\r\n      // NOTE: This implementation will disallow relative URLs from being added\r\n      // but will make it easier for users typing external URLs.\r\n      if (/^((http|https)...)/.test(url)) {\r\n        callback(url);\r\n      } else {\r\n        callback(\"http://\" + url);\r\n      }\r\n    },\r\n    \r\n    toggleLink: function(e) {\r\n      e.preventDefault();\r\n      var range = window.getSelection().getRangeAt(0);\r\n\r\n      // are we in an anchor element?\r\n      if (range.startContainer.parentNode.tagName === 'A' || range.endContainer.parentNode.tagName === 'A') {\r\n        // unlink anchor\r\n        document.execCommand('unlink', false, null);\r\n      } else {\r\n        // promt for url and create link\r\n        this.urlPrompt(function(url) {\r\n          document.execCommand('createLink', false, url);\r\n        });\r\n      }\r\n    },\r\n\r\n    toggleUnorderedList: function(e) {\r\n      e.preventDefault();\r\n      document.execCommand('insertUnorderedList', false, null);\r\n    },\r\n\r\n    toggleOrderedList: function(e){\r\n      e.preventDefault();\r\n      document.execCommand('insertOrderedList', false, null);\r\n    },\r\n        \r\n    justifyLeft: function(e) {\r\n      e.preventDefault();\r\n      document.execCommand('justifyLeft', false, null);\r\n    },\r\n\r\n    justifyCenter: function(e) {\r\n      e.preventDefault();\r\n      document.execCommand('justifyCenter', false, null);\r\n    },\r\n\r\n    justifyRight: function(e) {\r\n      e.preventDefault();\r\n      document.execCommand('justifyRight', false, null);\r\n    },\r\n\r\n    getImage: function(e) {\r\n      e.preventDefault();\r\n\r\n      // call startUploader with callback to handle inserting it once it is uploaded/cropped\r\n      this.startUploader(this.insertImage);\r\n    },\r\n        \r\n    startUploader: function(cb) {\r\n      // initialize Image Uploader\r\n      var model = new models.ImageUploader();\r\n      var view = new views.ImageUploader({model: model});\r\n            \r\n      // stash a reference to the callback to be called after image is uploaded\r\n      model._imageCallback = function(image) {\r\n        view.startCropper(image, cb);\r\n      };\r\n\r\n\r\n      // stash reference to saved range for inserting the image once its \r\n      this._savedRange = window.getSelection().getRangeAt(0);\r\n\r\n      // insert uploader html into DOM\r\n      $('body').append(view.render().el);\r\n    },\r\n        \r\n    insertImage: function(image) {\r\n      // insert image - passed as a callback to startUploader\r\n      var sel = window.getSelection();\r\n      sel.removeAllRanges();\r\n      sel.addRange(this._savedRange);\r\n            \r\n      var attrs = {\r\n        'editable': this.model.get('editable'),\r\n        'editableModel': this.model.get('editableModel')\r\n      };\r\n            \r\n      _.extend(attrs, image);\r\n\r\n      var model = new models.EditableImage(attrs);\r\n      var view = new views.EditableImage({model: model});\r\n      this._savedRange.insertNode($(view.render().el).addClass('etch-float-left')[0]);\r\n    },\r\n        \r\n    save: function(e) {\r\n      e.preventDefault();\r\n      var editableModel = this.model.get('editableModel');\r\n      editableModel.trigger('save');\r\n    }\r\n  });\r\n  });\r\n  \ndefine('skylark-etch/editableInit',[\r\n  \"./etch\"\r\n],function(etch){\r\n  var models = etch.models,\r\n      views = etch.views;\r\n\r\n  return etch.editableInit = function(e) {\r\n\r\n    e.stopPropagation();\r\n    var target = e.target || e.srcElement;\r\n    var $editable = $(target).etchFindEditable();\r\n    $editable.attr('contenteditable', true);\r\n\r\n    // if the editor isn't already built, build it\r\n    var $editor = $('.etch-editor-panel');\r\n    var editorModel = $editor.data('model');\r\n    if (!$editor.length) {\r\n      $editor = $('<div class=\"etch-editor-panel\">');\r\n      var editorAttrs = { editable: $editable, editableModel: this.model };\r\n      document.body.appendChild($editor[0]);\r\n      $editor.etchInstantiate({classType: 'Editor', attrs: editorAttrs});\r\n      editorModel = $editor.data('model');\r\n\r\n    // check if we are on a new editable\r\n    } else if ($editable[0] !== editorModel.get('editable')[0]) {\r\n      // set new editable\r\n      editorModel.set({\r\n        editable: $editable,\r\n        editableModel: this.model\r\n      });\r\n    }\r\n    \r\n    // Firefox seems to be only browser that defaults to `StyleWithCSS == true`\r\n    // so we turn it off here. Plus a try..catch to avoid an error being thrown in IE8.\r\n    try {\r\n      document.execCommand('StyleWithCSS', false, false);\r\n    }\r\n    catch (err) {\r\n      // expecting to just eat IE8 error, but if different error, rethrow\r\n      if (err.message !== \"Invalid argument.\") {\r\n        throw err;\r\n      }\r\n    }\r\n\r\n    if (models.EditableImage) {\r\n      // instantiate any images that may be in the editable\r\n      var $imgs = $editable.find('img');\r\n      if ($imgs.length) {\r\n        var attrs = { editable: $editable, editableModel: this.model };\r\n        $imgs.each(function() {\r\n          var $this = $(this);\r\n          if (!$this.data('editableImageModel')) {\r\n            var editableImageModel =  new models.EditableImage(attrs);\r\n            var editableImageView = new views.EditableImage({model: editableImageModel, el: this, tagName: this.tagName});\r\n            $this.data('editableImageModel', editableImageModel);\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    // listen for mousedowns that are not coming from the editor\r\n    // and close the editor\r\n    // unbind first to make sure we aren't doubling up on listeners\r\n    $('body').unbind('mousedown.editor').bind('mousedown.editor', function(e) {\r\n      // check to see if the click was in an etch tool\r\n      var target = e.target || e.srcElement;\r\n      if ($(target).not('.etch-editor-panel, .etch-editor-panel *, .etch-image-tools, .etch-image-tools *').length) {\r\n        // remove editor\r\n        $editor.remove();\r\n                  \r\n                  \r\n        if (models.EditableImage) {\r\n          // unblind the image-tools if the editor isn't active\r\n          $editable.find('img').unbind('mouseenter');\r\n\r\n          // remove any latent image tool model references\r\n          $(etch.config.selector+' img').data('editableImageModel', false)\r\n        }\r\n                  \r\n        // once the editor is removed, remove the body binding for it\r\n        $(this).unbind('mousedown.editor');\r\n      }\r\n    });\r\n\r\n    editorModel.set({position: {x: e.pageX - 15, y: e.pageY - 80}});\r\n  };\r\n});\ndefine('skylark-etch/helper',[\r\n\t\"skylark-langx/langx\",\r\n\t\"skylark-utils-dom/query\",\r\n\t\"./etch\"\r\n],function(langx,$,etch){\r\n  // jquery helper functions\r\n  $.fn.etchInstantiate = function(options, cb) {\r\n    return this.each(function() {\r\n      var $el = $(this);\r\n      options || (options = {});\r\n\r\n      var settings = {\r\n        el: this,\r\n        attrs: {}\r\n      }\r\n\r\n      langx.extend(settings, options);\r\n\r\n      var model = new etch.models[settings.classType](settings.attrs, settings);\r\n\r\n      // initialize a view is there is one\r\n      if (langx.isFunction(etch.views[settings.classType])) {\r\n        var view = new etch.views[settings.classType]({model: model, el: this, tagName: this.tagName});\r\n      }\r\n           \r\n      // stash the model and view on the elements data object\r\n      $el.data({model: model});\r\n      $el.data({view: view});\r\n\r\n      if (langx.isFunction(cb)) {\r\n        cb({model: model, view: view});\r\n      }\r\n    });\r\n  }\r\n\r\n  $.fn.etchFindEditable = function() {\r\n    // function that looks for the editable selector on itself or its parents\r\n    // and returns that el when it is found\r\n    var $el = $(this);\r\n    return $el.is(etch.config.selector) ? $el : $el.closest(etch.config.selector);\r\n  }\r\n  \r\n});\ndefine('skylark-etch/main',[\r\n\t\"./etch\",\r\n\t\"./config\",\r\n\t\"./models/Editor\",\r\n\t\"./views/Editor\",\r\n\t\"./editableInit\",\r\n\t\"./helper\"\r\n],function(etch){\r\n\treturn etch;\r\n});\ndefine('skylark-etch', ['skylark-etch/main'], function (main) { return main; });\n\n"]}